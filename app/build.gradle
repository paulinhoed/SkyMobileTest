apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


ext {
    leakcanary_android_version = "1.5.4"
    support_lib_version = "28.0.0"
    constraint_layout_version = "2.0.1"
    ktlint_version = "0.29.0"
    junit_version = "4.13"
    robolectric_version = "4.3.1"
    test_runner_version = "1.0.2"
    espresso_core_version = "3.0.2"
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.skymobiletest"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'memoryTest', 'true'
        }
        debug {
            buildConfigField 'boolean', 'memoryTest', 'true'
        }

        unitTest {
            buildConfigField 'boolean', 'memoryTest', 'false'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations {
        ktlint
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    //noinspection GradleCompatible
    implementation "com.android.support:design:$support_lib_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    ktlint "com.github.shyiko:ktlint:$ktlint_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"


    androidTestImplementation "com.android.support.test:runner:$test_runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_core_version"


    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_android_version"
    implementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_android_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_android_version"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'


    // Retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // GSON Converter
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
}


task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}


//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-kapt'
//
//android {
//    compileSdkVersion 30
//    buildToolsVersion "29.0.3"
//
//    defaultConfig {
//        applicationId "com.example.skymobiletest"
//        minSdkVersion 19
//        targetSdkVersion 30
//        versionCode 1
//        versionName "1.0"
//
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//    }
//
//    testOptions {
//        unitTests {
//            includeAndroidResources = true
//        }
//    }
////    compileOptions {
////        sourceCompatibility JavaVersion.VERSION_1_8
////        targetCompatibility JavaVersion.VERSION_1_8
////    }
//
//    configurations {
//        ktlint
//    }
//
//    defaultConfig {
//        vectorDrawables.useSupportLibrary = true
//    }
//}
//
//dependencies {
////    implementation fileTree(dir: "libs", include: ["*.jar"])
////    implementation 'androidx.annotation:annotation:1.1.0'
////    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
////    implementation 'androidx.core:core-ktx:1.3.1'
////    implementation 'androidx.appcompat:appcompat:1.2.0'
////    testImplementation 'junit:junit:4.13'
////    testImplementation 'org.robolectric:robolectric:4.3.1'
////    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
////    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
////
////    implementation 'com.github.bumptech.glide:glide:4.8.0'
////    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
////    implementation 'com.android.support:multidex:1.0.3'
////
////    // Temporary fix begin
////    implementation 'com.android.support:support-annotations:28.0.0'
////    annotationProcessor 'com.android.support:support-annotations:28.0.0'
////    implementation "androidx.core:core-ktx:+"
////    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
////
////    ktlint "com.github.shyiko:ktlint:$ktlint_version"
////    //noinspection GradleCompatible
////    androidTestImplementation "com.android.support.test:runner:1.0.2"
////    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_core_version"
////
////
////    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_android_version"
////    implementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_android_version"
////    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_android_version"
//
//}
//
//task ktlint(type: JavaExec, group: "verification") {
//    description = "Check Kotlin code style."
//    main = "com.github.shyiko.ktlint.Main"
//    classpath = configurations.ktlint
//    args "src/**/*.kt"
//    // to generate report in checkstyle format prepend following args:
//    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
//    // see https://github.com/shyiko/ktlint#usage for more
//}
//check.dependsOn ktlint
//
//task ktlintFormat(type: JavaExec, group: "formatting") {
//    description = "Fix Kotlin code style deviations."
//    main = "com.github.shyiko.ktlint.Main"
//    classpath = configurations.ktlint
//    args "-F", "src/**/*.kt"
//}

